// <auto-generated />
using System;
using BankMVC.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankMVC.Data.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    partial class SqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BankMVC.Model.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("pin");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("balance");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_name");

                    b.HasKey("TransactionId")
                        .HasName("transaction_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            Amount = 1000.0,
                            TransactionDate = new DateTime(2020, 11, 11, 14, 28, 58, 827, DateTimeKind.Local).AddTicks(3242),
                            UserName = "user1"
                        },
                        new
                        {
                            TransactionId = 2,
                            Amount = 555.0,
                            TransactionDate = new DateTime(2020, 11, 11, 14, 28, 58, 832, DateTimeKind.Local).AddTicks(2350),
                            UserName = "user2"
                        },
                        new
                        {
                            TransactionId = 3,
                            Amount = 777.0,
                            TransactionDate = new DateTime(2020, 11, 11, 14, 28, 58, 832, DateTimeKind.Local).AddTicks(2497),
                            UserName = "user3"
                        });
                });

            modelBuilder.Entity("BankMVC.Model.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("balance");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pin");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId")
                        .HasName("user_pkey");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Balance = 1000.0,
                            Pin = "BCDE",
                            UserName = "user1"
                        },
                        new
                        {
                            UserId = 2,
                            Balance = 555.0,
                            Pin = "EFGH",
                            UserName = "user2"
                        },
                        new
                        {
                            UserId = 3,
                            Balance = 777.0,
                            Pin = "EFGH",
                            UserName = "user3"
                        });
                });

            modelBuilder.Entity("BankMVC.Model.Models.Transaction", b =>
                {
                    b.HasOne("BankMVC.Model.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankMVC.Model.Models.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
